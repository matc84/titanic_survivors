plot(x, y, col = 'blue', pch = 's')
plot(x, y, col = 'blue', pch = '1')
plot(x, y, col = 'blue', pch = '2')
plot(x, y, col = 'blue', pch = 2)
plot(x, y, col = 'blue', pch = 3)
plot(x, y, col = 'blue', pch = 4)
plot(x, y, col = 'blue', pch = 5)
plot(x, y, col = 'blue', pch = 6)
plot(x, y, col = 'blue', pch = "o")
plot(x, y, col = 'blue', pch = "o", fill = 'yellow')
plot(x, y, col = 'blue', pch = "o")
plot(x, y, col = 'blue', pch = "o")
plot(x, y, col = 'blue', pch = 2)
plot(x, y, col = 'blue', pch = 1)
?plot
plot(x, y, col = 'blue', type = "h")
plot(x, y, col = 'blue', type = "l")
plot(x, y, col = 'blue', type = "p")
plot(x, y, col = 'blue', type = "b")
plot(x, y, col = 'blue', type = "h")
plot(x, y, col = 'blue', type = "s")
plot(x, y, col = 'blue', type = "S")
plot(x, y, col = 'blue', type = "o")
plot(x, y, col = 'blue', type = "o", bg = 'yellow')
plot(x, y, col = 'blue', type = "o", par(bg = 'yellow'))
plot(x, y, col = 'blue', type = "h", par(bg = 'yellow'))
plot(x, y, col = 'blue', type = "p", pch = 2)
plot(x, y, col = 'blue', type = "p", pch = 3)
plot(x, y, col = 'blue', type = "p", pch = 1)
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/test2')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/test3')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
?iuf
?if
)
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
runApp('Month 9 - Data Products/Week4_PA')
shiny::runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
runApp('Month10-CapstoneProject/final/en_US/Final_tables/text_predictor')
getwd()
setwd("C:/Users/matth_000/Desktop/kaggle/Titanic")
train <- read.csv("train.csv")
##Impute NAs in the age column
## Find the rows with NA in the Age column
NAs <- is.na(train$Age)
## Find the average age for people with "Miss" in their name (this is a decent indicator of age)
miss <- grepl("Miss", train$Name, ignore.case = FALSE)
miss_avg_age = mean(train[miss,]$Age, na.rm = TRUE)
## Replace the NAs for people named "Miss with the average age of the other people named "Miss"
train[miss & NAs,]$Age <- miss_avg_age
## Find the remaining rows with NAs in the Age column and find the average age for people with "Master"
NAs <- is.na(train$Age)
master <- grepl("Master", train$Name, ignore.case = FALSE)
master_avg_age = mean(train[master,]$Age, na.rm = TRUE)
train[master & NAs,]$Age <- master_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Mrs."
NAs <- is.na(train$Age)
mrs <- grepl("Mrs.", train$Name, ignore.case = FALSE)
mrs_avg_age = mean(train[mrs,]$Age, na.rm = TRUE)
train[mrs & NAs,]$Age <- mrs_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Mr."
NAs <- is.na(train$Age)
mr <- grepl("Mr.", train$Name, ignore.case = FALSE)
mr_avg_age = mean(train[mr,]$Age, na.rm = TRUE)
train[mr & NAs,]$Age <- mr_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Dr."
NAs <- is.na(train$Age)
dr <- grepl("Dr.", train$Name, ignore.case = FALSE)
dr_avg_age = mean(train[dr,]$Age, na.rm = TRUE)
train[dr & NAs,]$Age <- dr_avg_age
train <- train[,-11] ## Remove cabin feature
train <- train[,-4]  ## Remove name feature
train <- train[,-8]  ## Remove ticket feature
train <- train[,-1]  ## Remove passenger id
model <- lm(Survived ~ ., data = train)
model
table(train$embarked)
table(train$Embarked)
View(train)
sum(is.na(train$Embarked))
train[train$Embarked != c("C", "Q", "S")]
train[train$Embarked != "C"]
train[train$Embarked != c("C", "Q", "S"),]
train[train$Embarked != "C" & train$Embarked != "S" & train$Embarked != "Q"]
train[train$Embarked != "C" & train$Embarked != "S" & train$Embarked != "Q",]
table(train$Embarked)
train[train$Embarked != "C" & train$Embarked != "S" & train$Embarked != "Q",]$Embarked = "S"
table(train$Embarked)
model <- lm(Survived ~ ., data = train)
model
summary(model)
summary(train$Age)
test <- read.csv("test.csv")
##Impute NAs in the age column
## Find the rows with NA in the Age column
NAs <- is.na(test$Age)
## Find the average age for people with "Miss" in their name (this is a decent indicator of age)
miss <- grepl("Miss", test$Name, ignore.case = FALSE)
miss_avg_age = mean(test[miss,]$Age, na.rm = TRUE)
## Replace the NAs for people named "Miss with the average age of the other people named "Miss"
test[miss & NAs,]$Age <- miss_avg_age
## Find the remaining rows with NAs in the Age column and find the average age for people with "Master"
NAs <- is.na(test$Age)
master <- grepl("Master", test$Name, ignore.case = FALSE)
master_avg_age = mean(test[master,]$Age, na.rm = TRUE)
test[master & NAs,]$Age <- master_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Mrs."
NAs <- is.na(test$Age)
mrs <- grepl("Mrs.", test$Name, ignore.case = FALSE)
mrs_avg_age = mean(test[mrs,]$Age, na.rm = TRUE)
test[mrs & NAs,]$Age <- mrs_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Mr."
NAs <- is.na(test$Age)
mr <- grepl("Mr.", test$Name, ignore.case = FALSE)
mr_avg_age = mean(test[mr,]$Age, na.rm = TRUE)
test[mr & NAs,]$Age <- mr_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Dr."
NAs <- is.na(test$Age)
dr <- grepl("Dr.", test$Name, ignore.case = FALSE)
dr_avg_age = mean(test[dr,]$Age, na.rm = TRUE)
test[dr & NAs,]$Age <- dr_avg_age
## Find the remaining rows with NAs in the Age column and replace NAs for people named "Ms."
NAs <- is.na(test$Age)
ms <- grepl("Ms.", test$Name, ignore.case = FALSE)
ms_avg_age = mean(test[ms,]$Age, na.rm = TRUE)
test[ms & NAs,]$Age <- ms_avg_age
## Doesn't work because there's only on Ms.
## But since there's only one, we can look her up
## She was 21.25
test[ms & NAs,]$Age <- 21.25
### Impute NAs for $Fare
test_mean_fare <- mean(test$Fare, na.rm = TRUE)
NAs2 <- is.na(test$Fare)
test$Fare[NAs2] <- test_mean_fare
test <- test[,-10] ## Remove cabin feature
test <- test[,-3]  ## Remove name feature
test <- test[,-7]  ## Remove ticket feature
test <- test[,-1]  ## Remove Passenger id
model <- lm(Survived ~ Pclass + Sex + Age + SibSp, data = train)
model
summary(model)
predict(model, test)
predictions <- predict(model, test)
predictions <- as.data.frame(predict(model, test))
View(predictions)
predictions$`predict(model, test)` <- round(predictions$`predict(model, test)`)
View(predictions)
table(predictions$`predict(model, test)`)
surv_col <- as.data.frame(predict(model, test))
surv_col$`predict(model, test)` <- round(surv_col$`predict(model, test)`)
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_1.csv", row.names = FALSE)
surv_col <- as.data.frame(predict(model, test))
surv_col$`predict(model, test)` - 0.02
surv_col$`predict(model, test)` <- surv_col$`predict(model, test)` - 0.02
surv_col$`predict(model, test)` <- round(surv_col$`predict(model, test)`)
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_2.csv", row.names = FALSE)
table(my_predicted_data$Survived)
271+147
271/418
147/418
surv_col$`predict(model, test)` <- surv_col$`predict(model, test)` - 0.04
surv_col$`predict(model, test)` <- round(surv_col$`predict(model, test)`)
table(surv_col$`predict(model, test)`)
surv_col$`predict(model, test)` <- surv_col$`predict(model, test)` - 0.08
surv_col$`predict(model, test)` <- round(surv_col$`predict(model, test)`)
table(surv_col$`predict(model, test)`)
surv_col$`predict(model, test)` <- surv_col$`predict(model, test)` - 0.1
surv_col$`predict(model, test)` <- round(surv_col$`predict(model, test)`)
table(surv_col$`predict(model, test)`)
names(surv_col) <- "surv"
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
surv_col <- as.data.frame(predict(model, test))
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
table(surv_col$surv)
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv - 0.1
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
128/418
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_3.csv", row.names = FALSE)
surv_col <- as.data.frame(predict(model, test))
surv_col$surv <- surv_col$surv - 0.1143
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv - 0.1143
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
122/418
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_4.csv", row.names = FALSE)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv - 0.11
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv - 0.10
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv - 0.105
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_5.csv", row.names = FALSE)
124/418
128/418
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
149/418
130/418
129/418
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.103
table(surv_col$surv)
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.103
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.9
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.09
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.08
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.07
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_6.csv", row.names = FALSE)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.1
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
insurance$age2 <- insurance$age^2
setwd("C:/Users/matth_000/Desktop/Data Science stuff/Machine Learning with R/")
library(gmodels)
insurance <- read.csv("2148OS_code/chapter 6/insurance.csv", stringsAsFactors = TRUE)
str(insurance)
summary(insurance$charges)
hist(insurance$charges)
table(insurance$region)
## correlation matrix
cor(insurance[c('age', 'bmi', 'children', 'charges')])
## scatterplot matrix
pairs(insurance[c('age', 'bmi', 'children', 'charges')])
## enhanced scatterplot matrix
library(psych)
pairs.panels(insurance[c('age', 'bmi', 'children', 'charges')])
## linear model
model <- lm(charges ~ ., data = insurance)
model
# about the model: the model needs a reference points and makes one by itself
# the reference point chosen can be determined by looking at the features left out.
# sexfemale, smokerno and regionnortheast were all left out so we know that a female non-smoker
# from the northeast region was used as a reference point.
#
# Further, that means that a male will cost $131.30 less than a female, all other factors considered.
# A smoker will cost $23,848.50 more than a non-smoker.
# The northeast region is the region that spends the least on healthcare (perhaps it's the healthiest.)
#
# Also, a person's healthcare costs will go up by $256.90 every year.
# A person's healthcare costs will increase by $339.20 for every point increase in BMI
# A person will have to pay about $475.50 for every child they have
summary(model)
# about the model summary: residuals indicate how far away the real data was from the regression model.
# So, at the minimum residual, we overestimated healthcare costs by $11,304.90. The customer overpaid the insurance company.
# At the max residual, we underestimated healthcare costs by $29,992.80. The customer got a good deal on insurance.
# The coefficients were explained above.
# The significant codes show how likely the possibility is that a result was arrived at by random chance.
# Lower is better. For example, the smokeryes variable has a significance code of 2e-16, which is very close to zero.
# This means that it is extremely unlikely that someone being a smoker would have no effect on his or her healthcare costs.
# Adjusted R-squared and Multiple R-squared shows how much of the variance was explained by our model. Our score of 0.7494 is good.
## Improving model performance
insurance$age2 <- insurance$age^2
m <- lm(charges ~ age + age2, data = insurance)
summary(m)
m <- lm(charges ~ ., data = insurance)
summary(m)
insurance$bmi30 <- ifelse(insurance$bmi >= 30, 1, 0)
summary(m)
m <- lm(charges ~ ., data = insurance)
summary(m)
View(insurance)
m <- lm(charges ~ age + age2 + children + bmi + sex + region + bmi30*smoker, data = insurance)
summary(m)
model <- lm(Survived ~ Pclass + Sex + Age + SibSp, data = train)
model
summary(model)
train$Age2 <- train$Age^2
View(train)
summary(train$Fare)
quantile(train$Fare)
train$Fare_top_25_percent <- ifelse(train$Fare >= 31)
train$Fare_top_25_percent <- ifelse(train$Fare >= 31, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_25_percent + Sex*Pclass, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare + Fare_top_25_percent + Sex*Pclass + Sex*Age, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 300, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 250, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 400, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Fare2 + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age, data = train)
train$Fare2 <- train$Fare^2
model2 <- lm(Survived ~ Pclass + Fare2 + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Fare2 + Sex + Age + Age2 + SibSp + Fare + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Fare2 + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 300, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 500, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 200, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 300, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 100, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 50, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_top_10_percent <- ifelse(train$Fare >= 30, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_top_10_percent + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
train$Fare_over_mean <- ifelse(train$Fare >= 30, 1 ,0)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean + Sex*Pclass + Sex*Age + Sex*Fare_top_10_percent, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean + Sex*Pclass + Sex*Age + Sex*Fare_over_mean, data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp + Pclass*Age + Pclass*Age2 + Pclass*SibSp + Pclass*Fare_over_mean,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp + Pclass*Age + Pclass*Age2 + Pclass*SibSp + Pclass*Fare_over_mean +
Age2*SibSp + Age2*Fare_over_mean,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp + Pclass*Age + Pclass*Age2 + Pclass*SibSp + Pclass*Fare_over_mean +
Age2*SibSp + Age2*Fare_over_mean + SibSp*Fare_over_mean,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex +   Fare_over_mean +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp + Pclass*Age + Pclass*Age2 + Pclass*SibSp + Pclass*Fare_over_mean +
Age2*SibSp + Age2*Fare_over_mean + SibSp*Fare_over_mean,
data = train)
summary(model2)
model2 <- lm(Survived ~ Pclass + Sex + Age + Age2 + SibSp + Fare_over_mean + Fare2 +
Sex*Pclass + Sex*Age + Sex*Fare_over_mean + Sex*Age2 +
Sex*SibSp + Pclass*Age + Pclass*Age2 + Pclass*SibSp + Pclass*Fare_over_mean +
Age2*SibSp + Age2*Fare_over_mean + SibSp*Fare_over_mean,
data = train)
summary(model2)
test$Age2 <- test$Age^2
test$Fare2 <- test$Fare^2
test$Fare_over_mean <- ifelse(test$Fare >= 30, 1 ,0)
surv_col <- as.data.frame(predict(model, test))
names(surv_col) <- "surv"
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
149/269
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col$surv <- surv_col$surv -0.1
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col$surv <- surv_col$surv -0.15
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.1
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
101/418
149/418
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.05
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- round(surv_col$surv)
surv_col$surv <- surv_col$surv -0.04
table(surv_col$surv)
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.045
table(surv_col$surv)
surv_col$surv <- round(surv_col$surv)
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv -0.045
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
126/418
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_2.csv", row.names = FALSE)
write.csv(my_predicted_data, "my_predictions_lm_5.csv", row.names = FALSE)
write.csv(my_predicted_data, "my_predictions_lm_7.csv", row.names = FALSE)
setwd("C:/Users/matth_000/Desktop/kaggle/Titanic")
write.csv(my_predicted_data, "my_predictions_lm_7.csv", row.names = FALSE)
surv_col <- as.data.frame(predict(model2, test))
names(surv_col) <- "surv"
surv_col$surv <- surv_col$surv
surv_col$surv <- round(surv_col$surv)
table(surv_col$surv)
passenger_id <- as.data.frame(seq(892,1309))
my_predicted_data <- cbind(passenger_id, surv_col)
names(my_predicted_data) <- c("PassengerId", "Survived")
write.csv(my_predicted_data, "my_predictions_lm_7.csv", row.names = FALSE)
